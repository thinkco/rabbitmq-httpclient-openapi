/* 
 * Rabbitmq Http API
 *
 * This is the OpenAPI specification of the RabbitMQ HTTP API. For more information, please refer to [HTTP API](https://cdn.rawgit.com/rabbitmq/rabbitmq-management/v3.7.14/priv/www/api/index.html) official documentation.
 *
 * OpenAPI spec version: 1.0
 * Contact: carlos@adaptive.me
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Thinkcode.RabbitMQ.OpenAPI.Api;
using Thinkcode.RabbitMQ.OpenAPI.Model;
using Thinkcode.RabbitMQ.OpenAPI.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Thinkcode.RabbitMQ.OpenAPI.Test
{
    /// <summary>
    ///  Class for testing OverviewContexts
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class OverviewContextsTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for OverviewContexts
        //private OverviewContexts instance;

        public OverviewContextsTests()
        {
            // TODO uncomment below to create an instance of OverviewContexts
            //instance = new OverviewContexts();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of OverviewContexts
        /// </summary>
        [Fact]
        public void OverviewContextsInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" OverviewContexts
            //Assert.IsInstanceOfType<OverviewContexts> (instance, "variable 'instance' is a OverviewContexts");
        }


        /// <summary>
        /// Test the property 'Node'
        /// </summary>
        [Fact]
        public void NodeTest()
        {
            // TODO unit test for the property 'Node'
        }
        /// <summary>
        /// Test the property 'Path'
        /// </summary>
        [Fact]
        public void PathTest()
        {
            // TODO unit test for the property 'Path'
        }
        /// <summary>
        /// Test the property 'Port'
        /// </summary>
        [Fact]
        public void PortTest()
        {
            // TODO unit test for the property 'Port'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Fact]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'SslOpts'
        /// </summary>
        [Fact]
        public void SslOptsTest()
        {
            // TODO unit test for the property 'SslOpts'
        }

    }

}
